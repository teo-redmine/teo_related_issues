
<div class="contextual">
<% if User.current.allowed_to?(:manage_issue_relations, @project) %>
  <%= toggle_link l(:button_add), 'new-relation-form', {:focus => 'relation_issue_to_id'} %>
<% end %>
</div>

<p><strong><%=l(:label_related_issues)%></strong></p>

<% if @relations.present? %>
<% @query = IssueQuery.new(:name => "_", :filters => [session[:query][:filters]], :group_by => session[:query][:group_by], :column_names => session[:query][:column_names]) %>
<% @query = IssueQuery.new(:name => "_", :filters => { 'relates' => {:operator => "=", :values => [@issue.id]} }, :group_by => :project, :column_names => [:tracker, :subject]) %>
<% @issue_count_by_group = @query.issue_count_by_group %>
<% @issues = @query.issues(:include => [:assigned_to, :tracker, :priority, :category, :fixed_version],
                              :order => sort_clause,
                              :offset => @offset,
                              :limit => @limit) %>

<table class="list issues <%= sort_css_classes %>">
    <% grouped_issue_list(@issues, @query, @issue_count_by_group) do |issue, level, group_name, group_count, group_totals| -%>
    <% if group_name %>
      <% reset_cycle %>
      <tr class="group open">
        <td colspan="<%= @query.inline_columns.size + 2 %>">
          <span class="expander" onclick="toggleRowGroup(this);">&nbsp;</span>
          <span class="name"><%= group_name %></span> <span class="count"><%= group_count %></span> <span class="totals"><%= group_totals %></span>
          <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                               "toggleAllRowGroups(this)", :class => 'toggle-all') %>
        </td>
      </tr>
    <% end %>
    <tr id="issue-<%= issue.id %>" class="hascontextmenu <%= cycle('odd', 'even') %> <%= issue.css_classes %> <%= level > 0 ? "idnt idnt-#{level}" : nil %>">
      <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", issue.id, false, :id => nil) %></td>
      <%= raw @query.inline_columns.map {|column| "<td class=\"#{column.css_classes}\">#{column_content(column, issue)}</td>"}.join %>
    </tr>
    <% @query.block_columns.each do |column|
         if (text = column_content(column, issue)) && text.present? -%>
    <tr class="<%= current_cycle %>">
      <td colspan="<%= @query.inline_columns.size + 1 %>" class="<%= column.css_classes %>"><%= text %></td>
    </tr>
    <% end -%>
    <% end -%>
    <% end -%>
</table>

<form>
<table class="list issues">
<% @relations.each do |relation| %>
  <% other_issue = relation.other_issue(@issue) -%>
  <tr class="issue hascontextmenu <%= other_issue.css_classes %>" id="relation-<%= relation.id %>">
  <td class="checkbox"><%= check_box_tag("ids[]", other_issue.id, false, :id => nil) %></td>
  <td class="subject">
    <%= relation.to_s(@issue) {|other| link_to_issue(other, :project => false)}.html_safe %>
  </td>
  <td class="buttons"><%= link_to(l(:label_relation_delete),
                                  relation_path(relation),
                                  :remote => true,
                                  :method => :delete,
                                  :data => {:confirm => l(:text_are_you_sure)},
                                  :title => l(:label_relation_delete),
                                  :class => 'icon-only icon-link-break'
                                 ) if User.current.allowed_to?(:manage_issue_relations, @project) %></td>
  </tr>
<% end %>
</table>
</form>
<% end %>

<%= form_for @relation, {
                 :as => :relation, :remote => true,
                 :url => issue_relations_path(@issue),
                 :method => :post,
                 :html => {:id => 'new-relation-form', :style => 'display: none;'}
               } do |f| %>
<%= render :partial => 'issue_relations/form', :locals => {:f => f}%>
<% end %>
